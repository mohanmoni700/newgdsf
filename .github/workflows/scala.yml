name: Scala CI

on:
  push:
    branches: [ "qa-deployment" ]
  workflow_dispatch:
  

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: 'sbt'
    - name: compile code
      run: sbt dist

    - name: Run SonarQube Scan
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        docker run --rm \
          -e SONAR_HOST_URL=$SONAR_HOST_URL \
          -e SONAR_TOKEN=$SONAR_TOKEN \
          -v "$(pwd):/usr/src" \
          sonarsource/sonar-scanner-cli:latest \
          sonar-scanner \
          -Dsonar.projectKey=gdsservice \
          -Dsonar.projectName="GDSService" \
          -Dsonar.sources=/usr/src \
          -Dsonar.java.binaries=/usr/src/target/scala-2.11/classes

    - name: copy file via ssh key
      uses: appleboy/scp-action@v0.1.4
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.KEY }}
      with:
        source: "target/universal/gdsservice-1.0-SNAPSHOT.zip"
        target: "deployments"
        strip_components: 2
    - name: Install Dependencies
      uses: appleboy/ssh-action@v0.1.10
      with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script_stop: true
          script: |
            sudo systemctl stop gdsapp.service
            ~/deployments/scripts/gdsdeploy.sh
            ls -al
            sudo systemctl start gdsapp.service
